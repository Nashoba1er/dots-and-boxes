name: CI for Dots and Boxes

# Déclencher l'action à chaque push et pull request sur la branche principale
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job pour tester sur plusieurs versions de Python
  test:
    runs-on: ubuntu-latest  # Utilise un environnement Ubuntu pour exécuter les tests
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]  # Teste sur plusieurs versions de Python

    steps:
    # 1. Check out le code
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Installer Poetry (utilisation de l'action correcte)
    - name: Set up Poetry
      uses: poetry-action/setup-poetry@v2  # Utiliser l'action correcte pour installer Poetry
      with:
        poetry-version: "1.8"  # Spécifie la version de Poetry si nécessaire

    # 3. Installer les dépendances avec Poetry
    - name: Install dependencies
      run: |
        poetry install

    # 4. Exécuter les tests unitaires
    - name: Run unit tests
      run: |
        poetry run python -m unittest discover  # Exécuter les tests dans le répertoire "tests"

  # Job pour l'analyse statique du code avec Flake8
  flake8:
    runs-on: ubuntu-latest  # Utilise un environnement Ubuntu

    steps:
    # 1. Check out le code
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Installer Poetry et Flake8 (utilisation de l'action correcte pour Poetry)
    - name: Set up Poetry
      uses: poetry-action/setup-poetry@v2  # Utilisation de l'action correcte pour installer Poetry
      with:
        poetry-version: "1.8"  # Spécifie la version de Poetry si nécessaire

    - name: Install dependencies and Flake8
      run: |
        poetry install
        poetry run pip install flake8  # Installer Flake8 via Poetry

    # 3. Exécuter Flake8 pour l'analyse statique du code
    - name: Run Flake8
      run: |
        poetry run flake8 .  # Lancer Flake8 sur tout le projet
