name: CI for Dots and Boxes

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job pour tester sur plusieurs versions de Python
  test:
    runs-on: ubuntu-latest  # Utilise un environnement Ubuntu pour exécuter les tests

    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]  # Teste sur plusieurs versions de Python

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Utiliser la dernière version stable de l'action checkout

    # Installer Poetry
    - name: Set up Poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry

    # Installer les dépendances avec Poetry
    - name: Install dependencies
      run: |
        poetry install

    # Exécuter les tests unitaires
    - name: Run unit tests
      run: |
        poetry run python -m unittest discover

  # Job pour l'analyse statique du code avec Flake8
  flake8:
    runs-on: ubuntu-latest  # Utilise un environnement Ubuntu

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Utiliser la dernière version stable de l'action checkout

    # Installer Poetry et Flake8
    - name: Set up Poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry

    - name: Install dependencies and Flake8
      run: |
        poetry install
        poetry run pip install flake8  # Installer Flake8 via Poetry

    # Exécuter Flake8 pour l'analyse statique du code
    - name: Run Flake8
      run: |
        poetry run flake8 .  # Lancer Flake8 sur tout le projet

  # Job pour vérifier la présence de secrets dans le code
  git-secrets:
    runs-on: ubuntu-latest  # Utilise un environnement Ubuntu
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Git Secrets
      run: |
        sudo apt-get install -y git-secrets
        git secrets --register-aws
        git secrets --install

    - name: Run Git Secrets
      run: |
        export TERM=xterm  # Définir la variable $TERM pour éviter les erreurs de terminal
        git secrets --scan  # Vérifier la présence de secrets dans les commits
      continue-on-error: true  # Ignorer les erreurs liées à "say" et "$TERM"
