name: CI for Dots and Boxes

# Déclencher l'action à chaque push et pull request sur la branche principale
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job pour tester sur plusieurs versions de Python
  test:
    runs-on: ubuntu-latest  # Utilise un environnement Ubuntu pour exécuter les tests
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]  # Teste sur plusieurs versions de Python

    steps:
    # 1. Check out le code
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Installer Poetry avec pip
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip  # Met à jour pip
        python -m pip install poetry  # Installe Poetry via pip

    # 3. Mettre à jour le fichier poetry.lock
    - name: Update poetry.lock
      run: |
        poetry lock  # Met à jour le fichier poetry.lock

    # 4. Installer les dépendances avec Poetry
    - name: Install dependencies
      run: |
        poetry install

    # 5. Exécuter les tests unitaires
    - name: Run unit tests
      run: |
        poetry run python -m unittest discover  # Exécuter les tests dans le répertoire "tests"

  # Job pour l'analyse statique du code avec Flake8
  flake8:
    runs-on: ubuntu-latest  # Utilise un environnement Ubuntu

    steps:
    # 1. Check out le code
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Installer Poetry et Flake8 via pip
    - name: Install Poetry and Flake8
      run: |
        python -m pip install --upgrade pip  # Met à jour pip
        python -m pip install poetry  # Installe Poetry
        poetry install
        poetry run pip install flake8  # Installer Flake8 via Poetry

    # 3. Exécuter Flake8 pour l'analyse statique du code
    - name: Run Flake8
      run: |
        poetry run flake8 .  # Lancer Flake8 sur tout le projet
